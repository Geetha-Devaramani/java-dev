<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="66" passed="66">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="7293" started-at="2020-01-31T09:01:54Z" finished-at="2020-01-31T09:02:02Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="7293" started-at="2020-01-31T09:01:54Z" finished-at="2020-01-31T09:02:02Z">
      <class name="com.ring.service.test.VehicleServiceImplTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.VehicleServiceImplTest@772ccecf]" name="initMocks" is-config="true" duration-ms="2" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="addVehicleTest1()[pri:0, instance:com.ring.service.test.VehicleServiceImplTest@772ccecf]" name="addVehicleTest1" duration-ms="1" started-at="2020-01-31T09:02:02Z" finished-at="2020-01-31T09:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addVehicleTest1 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.VehicleServiceImplTest@772ccecf]" name="initMocks" is-config="true" duration-ms="0" started-at="2020-01-31T09:02:02Z" finished-at="2020-01-31T09:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="addVehicleTest2()[pri:0, instance:com.ring.service.test.VehicleServiceImplTest@772ccecf]" name="addVehicleTest2" duration-ms="1" started-at="2020-01-31T09:02:02Z" finished-at="2020-01-31T09:02:02Z">
          <exception class="com.ring.exceptions.RingException">
            <full-stacktrace>
              <![CDATA[com.ring.exceptions.RingException
at com.ring.service.VehicleServiceImpl.addVehicle(VehicleServiceImpl.java:28)
at com.ring.service.test.VehicleServiceImplTest.addVehicleTest2(VehicleServiceImplTest.java:83)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- com.ring.exceptions.RingException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addVehicleTest2 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.VehicleServiceImplTest@772ccecf]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:02Z" finished-at="2020-01-31T09:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="deleteVehicle()[pri:0, instance:com.ring.service.test.VehicleServiceImplTest@772ccecf]" name="deleteVehicle" duration-ms="0" started-at="2020-01-31T09:02:02Z" finished-at="2020-01-31T09:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteVehicle -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.VehicleServiceImplTest@772ccecf]" name="initMocks" is-config="true" duration-ms="0" started-at="2020-01-31T09:02:02Z" finished-at="2020-01-31T09:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getVehicle()[pri:0, instance:com.ring.service.test.VehicleServiceImplTest@772ccecf]" name="getVehicle" duration-ms="1" started-at="2020-01-31T09:02:02Z" finished-at="2020-01-31T09:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getVehicle -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.VehicleServiceImplTest@772ccecf]" name="initMocks" is-config="true" duration-ms="0" started-at="2020-01-31T09:02:02Z" finished-at="2020-01-31T09:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getVehicleListTest1()[pri:0, instance:com.ring.service.test.VehicleServiceImplTest@772ccecf]" name="getVehicleListTest1" duration-ms="0" started-at="2020-01-31T09:02:02Z" finished-at="2020-01-31T09:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getVehicleListTest1 -->
      </class> <!-- com.ring.service.test.VehicleServiceImplTest -->
      <class name="com.ring.dao.test.UserDaoImplTest">
        <test-method status="PASS" signature="beforePowerMockTestClass()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="beforePowerMockTestClass" is-config="true" duration-ms="78" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestClass -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="beforePowerMockTestMethod" is-config="true" duration-ms="961" started-at="2020-01-31T09:01:59Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="initMocks" is-config="true" duration-ms="5" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getUserInfoTest()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="getUserInfoTest" duration-ms="35" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserInfoTest -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="afterPowerMockTestMethod" is-config="true" duration-ms="2" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="registerClientTest1()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="registerClientTest1" duration-ms="1" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerClientTest1 -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="registerUserTest1()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="registerUserTest1" duration-ms="49" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUserTest1 -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="registerUserTest2()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="registerUserTest2" duration-ms="20" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUserTest2 -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="beforePowerMockTestMethod" is-config="true" duration-ms="2" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="initMocks" is-config="true" duration-ms="0" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="updateInfoTest1()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="updateInfoTest1" duration-ms="2" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateInfoTest1 -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="afterPowerMockTestClass()[pri:0, instance:com.ring.dao.test.UserDaoImplTest@7e5383d1]" name="afterPowerMockTestClass" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestClass -->
      </class> <!-- com.ring.dao.test.UserDaoImplTest -->
      <class name="com.ring.service.test.RecoverAccountServiceImplTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.RecoverAccountServiceImplTest@4305b87e]" name="initMocks" is-config="true" duration-ms="9" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="resetCredentialsTest1()[pri:0, instance:com.ring.service.test.RecoverAccountServiceImplTest@4305b87e]" name="resetCredentialsTest1" duration-ms="27" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCredentialsTest1 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.RecoverAccountServiceImplTest@4305b87e]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="resetCredentialsTest2()[pri:0, instance:com.ring.service.test.RecoverAccountServiceImplTest@4305b87e]" name="resetCredentialsTest2" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCredentialsTest2 -->
        <test-method status="PASS" signature="resetCredentialsTest3()[pri:0, instance:com.ring.service.test.RecoverAccountServiceImplTest@4305b87e]" name="resetCredentialsTest3" duration-ms="2" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCredentialsTest3 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.RecoverAccountServiceImplTest@4305b87e]" name="initMocks" is-config="true" duration-ms="0" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="sendMailTest1()[pri:0, instance:com.ring.service.test.RecoverAccountServiceImplTest@4305b87e]" name="sendMailTest1" duration-ms="7" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendMailTest1 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.RecoverAccountServiceImplTest@4305b87e]" name="initMocks" is-config="true" duration-ms="0" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.RecoverAccountServiceImplTest@4305b87e]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="sendMailTest2()[pri:0, instance:com.ring.service.test.RecoverAccountServiceImplTest@4305b87e]" name="sendMailTest2" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendMailTest2 -->
      </class> <!-- com.ring.service.test.RecoverAccountServiceImplTest -->
      <class name="com.ring.controller.test.SocialLoginControllerTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.controller.test.SocialLoginControllerTest@67954442]" name="initMocks" is-config="true" duration-ms="50" started-at="2020-01-31T09:01:56Z" finished-at="2020-01-31T09:01:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="loginUsingSocialNetworkTest1()[pri:0, instance:com.ring.controller.test.SocialLoginControllerTest@67954442]" name="loginUsingSocialNetworkTest1" duration-ms="5" started-at="2020-01-31T09:01:56Z" finished-at="2020-01-31T09:01:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUsingSocialNetworkTest1 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.controller.test.SocialLoginControllerTest@67954442]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:56Z" finished-at="2020-01-31T09:01:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="loginUsingSocialNetworkTest2()[pri:0, instance:com.ring.controller.test.SocialLoginControllerTest@67954442]" name="loginUsingSocialNetworkTest2" duration-ms="4" started-at="2020-01-31T09:01:56Z" finished-at="2020-01-31T09:01:56Z">
          <exception class="com.ring.exceptions.RingException">
            <full-stacktrace>
              <![CDATA[com.ring.exceptions.RingException
]]>
            </full-stacktrace>
          </exception> <!-- com.ring.exceptions.RingException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUsingSocialNetworkTest2 -->
      </class> <!-- com.ring.controller.test.SocialLoginControllerTest -->
      <class name="com.ring.dao.test.SocialLoginDaoTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.SocialLoginDaoTest@5282f922]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="registerSocialUserTest1()[pri:0, instance:com.ring.dao.test.SocialLoginDaoTest@5282f922]" name="registerSocialUserTest1" duration-ms="4" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerSocialUserTest1 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.SocialLoginDaoTest@5282f922]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="registerSocialUserTest2()[pri:0, instance:com.ring.dao.test.SocialLoginDaoTest@5282f922]" name="registerSocialUserTest2" duration-ms="0" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerSocialUserTest2 -->
      </class> <!-- com.ring.dao.test.SocialLoginDaoTest -->
      <class name="com.ring.controller.test.VehicleControllerTest">
        <test-method status="PASS" signature="beforePowerMockTestClass()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="beforePowerMockTestClass" is-config="true" duration-ms="15" started-at="2020-01-31T09:01:57Z" finished-at="2020-01-31T09:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestClass -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="beforePowerMockTestMethod" is-config="true" duration-ms="331" started-at="2020-01-31T09:01:57Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="initMocks" is-config="true" duration-ms="6" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="addVehicleTest1()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="addVehicleTest1" duration-ms="581" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addVehicleTest1 -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="afterPowerMockTestMethod" is-config="true" duration-ms="3" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="deleteVehicleTest1()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="deleteVehicleTest1" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteVehicleTest1 -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="initMocks" is-config="true" duration-ms="2" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="editPressureSettingsTest()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="editPressureSettingsTest" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editPressureSettingsTest -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="editVehicleTest()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="editVehicleTest" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editVehicleTest -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="initMocks" is-config="true" duration-ms="2" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getVehicleListTest1()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="getVehicleListTest1" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getVehicleListTest1 -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getVehicleTest1()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="getVehicleTest1" duration-ms="2" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getVehicleTest1 -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="updateDefaultstatusTest()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="updateDefaultstatusTest" duration-ms="2" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateDefaultstatusTest -->
        <test-method status="PASS" signature="afterPowerMockTestClass()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="afterPowerMockTestClass" is-config="true" duration-ms="0" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestClass -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.controller.test.VehicleControllerTest@714ab3a1]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
      </class> <!-- com.ring.controller.test.VehicleControllerTest -->
      <class name="com.ring.dao.test.RecoverAccountDaoTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.RecoverAccountDaoTest@7d2aa0c]" name="initMocks" is-config="true" duration-ms="5" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getDataBasedOnTokenTest1()[pri:0, instance:com.ring.dao.test.RecoverAccountDaoTest@7d2aa0c]" name="getDataBasedOnTokenTest1" duration-ms="4" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDataBasedOnTokenTest1 -->
        <test-method status="PASS" signature="getUserInfoFromDbTest1()[pri:0, instance:com.ring.dao.test.RecoverAccountDaoTest@7d2aa0c]" name="getUserInfoFromDbTest1" duration-ms="3" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserInfoFromDbTest1 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.RecoverAccountDaoTest@7d2aa0c]" name="initMocks" is-config="true" duration-ms="0" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="persistTokenInDbTest1()[pri:0, instance:com.ring.dao.test.RecoverAccountDaoTest@7d2aa0c]" name="persistTokenInDbTest1" duration-ms="46" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- persistTokenInDbTest1 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.RecoverAccountDaoTest@7d2aa0c]" name="initMocks" is-config="true" duration-ms="0" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="resetPasswordTest1()[pri:0, instance:com.ring.dao.test.RecoverAccountDaoTest@7d2aa0c]" name="resetPasswordTest1" duration-ms="1" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetPasswordTest1 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.RecoverAccountDaoTest@7d2aa0c]" name="initMocks" is-config="true" duration-ms="0" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
      </class> <!-- com.ring.dao.test.RecoverAccountDaoTest -->
      <class name="com.ring.controller.test.RecoverAccountControllerTest">
        <test-method status="PASS" signature="beforePowerMockTestClass()[pri:0, instance:com.ring.controller.test.RecoverAccountControllerTest@4a3e3ce3]" name="beforePowerMockTestClass" is-config="true" duration-ms="22" started-at="2020-01-31T09:01:55Z" finished-at="2020-01-31T09:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestClass -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.controller.test.RecoverAccountControllerTest@4a3e3ce3]" name="beforePowerMockTestMethod" is-config="true" duration-ms="354" started-at="2020-01-31T09:01:55Z" finished-at="2020-01-31T09:01:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.controller.test.RecoverAccountControllerTest@4a3e3ce3]" name="initMocks" is-config="true" duration-ms="6" started-at="2020-01-31T09:01:56Z" finished-at="2020-01-31T09:01:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="recoverAccountHandlerTest1()[pri:0, instance:com.ring.controller.test.RecoverAccountControllerTest@4a3e3ce3]" name="recoverAccountHandlerTest1" duration-ms="554" started-at="2020-01-31T09:01:56Z" finished-at="2020-01-31T09:01:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recoverAccountHandlerTest1 -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.controller.test.RecoverAccountControllerTest@4a3e3ce3]" name="afterPowerMockTestMethod" is-config="true" duration-ms="2" started-at="2020-01-31T09:01:56Z" finished-at="2020-01-31T09:01:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.controller.test.RecoverAccountControllerTest@4a3e3ce3]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:56Z" finished-at="2020-01-31T09:01:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.controller.test.RecoverAccountControllerTest@4a3e3ce3]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:56Z" finished-at="2020-01-31T09:01:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="resetCredentialsHandlerTest()[pri:0, instance:com.ring.controller.test.RecoverAccountControllerTest@4a3e3ce3]" name="resetCredentialsHandlerTest" duration-ms="6" started-at="2020-01-31T09:01:56Z" finished-at="2020-01-31T09:01:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCredentialsHandlerTest -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.controller.test.RecoverAccountControllerTest@4a3e3ce3]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-01-31T09:01:56Z" finished-at="2020-01-31T09:01:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="afterPowerMockTestClass()[pri:0, instance:com.ring.controller.test.RecoverAccountControllerTest@4a3e3ce3]" name="afterPowerMockTestClass" is-config="true" duration-ms="0" started-at="2020-01-31T09:01:56Z" finished-at="2020-01-31T09:01:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestClass -->
      </class> <!-- com.ring.controller.test.RecoverAccountControllerTest -->
      <class name="com.ring.dao.test.VehicleDaoImplTest">
        <test-method status="PASS" signature="beforePowerMockTestClass()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="beforePowerMockTestClass" is-config="true" duration-ms="159" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestClass -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="beforePowerMockTestMethod" is-config="true" duration-ms="354" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="initMocks" is-config="true" duration-ms="5" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="addVehicleTest1()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="addVehicleTest1" duration-ms="135" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addVehicleTest1 -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="afterPowerMockTestMethod" is-config="true" duration-ms="4" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="initMocks" is-config="true" duration-ms="2" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="addVehicleTest2()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="addVehicleTest2" duration-ms="10" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addVehicleTest2 -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="editVehicleTest()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="editVehicleTest" duration-ms="26" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editVehicleTest -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getVehicleListTest1()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="getVehicleListTest1" duration-ms="2" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getVehicleListTest1 -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="initMocks" is-config="true" duration-ms="2" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getVehicleTest1()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="getVehicleTest1" duration-ms="1" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getVehicleTest1 -->
        <test-method status="PASS" signature="afterPowerMockTestClass()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="afterPowerMockTestClass" is-config="true" duration-ms="0" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestClass -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.dao.test.VehicleDaoImplTest@6c43d4dd]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
      </class> <!-- com.ring.dao.test.VehicleDaoImplTest -->
      <class name="com.ring.service.test.UserServiceImplTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.UserServiceImplTest@198453c9]" name="initMocks" is-config="true" duration-ms="10" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getQuatersTest()[pri:0, instance:com.ring.service.test.UserServiceImplTest@198453c9]" name="getQuatersTest" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getQuatersTest -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.UserServiceImplTest@198453c9]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.UserServiceImplTest@198453c9]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getUserInfoTest1()[pri:0, instance:com.ring.service.test.UserServiceImplTest@198453c9]" name="getUserInfoTest1" duration-ms="0" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserInfoTest1 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.UserServiceImplTest@198453c9]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getUserInfoTest2()[pri:0, instance:com.ring.service.test.UserServiceImplTest@198453c9]" name="getUserInfoTest2" duration-ms="0" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <exception class="com.ring.exceptions.RingException">
            <full-stacktrace>
              <![CDATA[com.ring.exceptions.RingException
at com.ring.service.UserServiceImpl.getUserInfo(UserServiceImpl.java:87)
at com.ring.service.test.UserServiceImplTest.getUserInfoTest2(UserServiceImplTest.java:70)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- com.ring.exceptions.RingException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserInfoTest2 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.UserServiceImplTest@198453c9]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="registerClientTest1()[pri:0, instance:com.ring.service.test.UserServiceImplTest@198453c9]" name="registerClientTest1" duration-ms="0" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerClientTest1 -->
        <test-method status="PASS" signature="registerUserTest1()[pri:0, instance:com.ring.service.test.UserServiceImplTest@198453c9]" name="registerUserTest1" duration-ms="0" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUserTest1 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.UserServiceImplTest@198453c9]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.UserServiceImplTest@198453c9]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="registerUserTest2()[pri:0, instance:com.ring.service.test.UserServiceImplTest@198453c9]" name="registerUserTest2" duration-ms="0" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <exception class="com.ring.exceptions.RingException">
            <full-stacktrace>
              <![CDATA[com.ring.exceptions.RingException
at com.ring.service.UserServiceImpl.registerUser(UserServiceImpl.java:66)
at com.ring.service.test.UserServiceImplTest.registerUserTest2(UserServiceImplTest.java:136)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- com.ring.exceptions.RingException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUserTest2 -->
        <test-method status="PASS" signature="updateInfoTest1()[pri:0, instance:com.ring.service.test.UserServiceImplTest@198453c9]" name="updateInfoTest1" duration-ms="0" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateInfoTest1 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.UserServiceImplTest@198453c9]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="updateInfoTest2()[pri:0, instance:com.ring.service.test.UserServiceImplTest@198453c9]" name="updateInfoTest2" duration-ms="0" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <exception class="com.ring.exceptions.RingException">
            <full-stacktrace>
              <![CDATA[com.ring.exceptions.RingException
at com.ring.service.UserServiceImpl.updateInfo(UserServiceImpl.java:168)
at com.ring.service.test.UserServiceImplTest.updateInfoTest2(UserServiceImplTest.java:109)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- com.ring.exceptions.RingException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateInfoTest2 -->
      </class> <!-- com.ring.service.test.UserServiceImplTest -->
      <class name="com.ring.dao.test.TyrePressureDaoImplTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.TyrePressureDaoImplTest@76f18f68]" name="initMocks" is-config="true" duration-ms="67" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getLatestPressureDataTest1()[pri:0, instance:com.ring.dao.test.TyrePressureDaoImplTest@76f18f68]" name="getLatestPressureDataTest1" duration-ms="11" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLatestPressureDataTest1 -->
        <test-method status="PASS" signature="getTyrePressureDataTest1()[pri:0, instance:com.ring.dao.test.TyrePressureDaoImplTest@76f18f68]" name="getTyrePressureDataTest1" duration-ms="13" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTyrePressureDataTest1 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.TyrePressureDaoImplTest@76f18f68]" name="initMocks" is-config="true" duration-ms="0" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
      </class> <!-- com.ring.dao.test.TyrePressureDaoImplTest -->
      <class name="com.ring.controller.test.AppCoreControllerTest">
        <test-method status="PASS" signature="beforePowerMockTestClass()[pri:0, instance:com.ring.controller.test.AppCoreControllerTest@548bdfda]" name="beforePowerMockTestClass" is-config="true" duration-ms="43" started-at="2020-01-31T09:01:54Z" finished-at="2020-01-31T09:01:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestClass -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.controller.test.AppCoreControllerTest@548bdfda]" name="beforePowerMockTestMethod" is-config="true" duration-ms="474" started-at="2020-01-31T09:01:54Z" finished-at="2020-01-31T09:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.controller.test.AppCoreControllerTest@548bdfda]" name="initMocks" is-config="true" duration-ms="10" started-at="2020-01-31T09:01:55Z" finished-at="2020-01-31T09:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="logoutTest()[pri:0, instance:com.ring.controller.test.AppCoreControllerTest@548bdfda]" name="logoutTest" duration-ms="586" started-at="2020-01-31T09:01:55Z" finished-at="2020-01-31T09:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutTest -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.controller.test.AppCoreControllerTest@548bdfda]" name="afterPowerMockTestMethod" is-config="true" duration-ms="4" started-at="2020-01-31T09:01:55Z" finished-at="2020-01-31T09:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.controller.test.AppCoreControllerTest@548bdfda]" name="beforePowerMockTestMethod" is-config="true" duration-ms="2" started-at="2020-01-31T09:01:55Z" finished-at="2020-01-31T09:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.controller.test.AppCoreControllerTest@548bdfda]" name="initMocks" is-config="true" duration-ms="2" started-at="2020-01-31T09:01:55Z" finished-at="2020-01-31T09:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="registerClientTest1()[pri:0, instance:com.ring.controller.test.AppCoreControllerTest@548bdfda]" name="registerClientTest1" duration-ms="5" started-at="2020-01-31T09:01:55Z" finished-at="2020-01-31T09:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerClientTest1 -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.controller.test.AppCoreControllerTest@548bdfda]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:55Z" finished-at="2020-01-31T09:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.controller.test.AppCoreControllerTest@548bdfda]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:55Z" finished-at="2020-01-31T09:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.controller.test.AppCoreControllerTest@548bdfda]" name="initMocks" is-config="true" duration-ms="2" started-at="2020-01-31T09:01:55Z" finished-at="2020-01-31T09:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="screenDetailsTest1()[pri:0, instance:com.ring.controller.test.AppCoreControllerTest@548bdfda]" name="screenDetailsTest1" duration-ms="6" started-at="2020-01-31T09:01:55Z" finished-at="2020-01-31T09:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenDetailsTest1 -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.controller.test.AppCoreControllerTest@548bdfda]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:55Z" finished-at="2020-01-31T09:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="afterPowerMockTestClass()[pri:0, instance:com.ring.controller.test.AppCoreControllerTest@548bdfda]" name="afterPowerMockTestClass" is-config="true" duration-ms="0" started-at="2020-01-31T09:01:55Z" finished-at="2020-01-31T09:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestClass -->
      </class> <!-- com.ring.controller.test.AppCoreControllerTest -->
      <class name="com.ring.dao.test.LoginDaoImplTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.dao.test.LoginDaoImplTest@4aa8504f]" name="initMocks" is-config="true" duration-ms="76" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getUserTest1()[pri:0, instance:com.ring.dao.test.LoginDaoImplTest@4aa8504f]" name="getUserTest1" duration-ms="74" started-at="2020-01-31T09:01:58Z" finished-at="2020-01-31T09:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserTest1 -->
      </class> <!-- com.ring.dao.test.LoginDaoImplTest -->
      <class name="com.ring.service.test.NextScreenInfoTest">
        <test-method status="PASS" signature="beforePowerMockTestClass()[pri:0, instance:com.ring.service.test.NextScreenInfoTest@319267ad]" name="beforePowerMockTestClass" is-config="true" duration-ms="23" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestClass -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.service.test.NextScreenInfoTest@319267ad]" name="beforePowerMockTestMethod" is-config="true" duration-ms="812" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.NextScreenInfoTest@319267ad]" name="initMocks" is-config="true" duration-ms="6" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getNextScreeninfoTest2()[pri:0, instance:com.ring.service.test.NextScreenInfoTest@319267ad]" name="getNextScreeninfoTest2" duration-ms="46" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNextScreeninfoTest2 -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.service.test.NextScreenInfoTest@319267ad]" name="afterPowerMockTestMethod" is-config="true" duration-ms="2" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.service.test.NextScreenInfoTest@319267ad]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.NextScreenInfoTest@319267ad]" name="initMocks" is-config="true" duration-ms="2" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getNextScreeninfoTest3()[pri:0, instance:com.ring.service.test.NextScreenInfoTest@319267ad]" name="getNextScreeninfoTest3" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNextScreeninfoTest3 -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.service.test.NextScreenInfoTest@319267ad]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.service.test.NextScreenInfoTest@319267ad]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.NextScreenInfoTest@319267ad]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getNextScreeninfoTest4()[pri:0, instance:com.ring.service.test.NextScreenInfoTest@319267ad]" name="getNextScreeninfoTest4" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNextScreeninfoTest4 -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.service.test.NextScreenInfoTest@319267ad]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.service.test.NextScreenInfoTest@319267ad]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.NextScreenInfoTest@319267ad]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getNextScreeninfoTest5()[pri:0, instance:com.ring.service.test.NextScreenInfoTest@319267ad]" name="getNextScreeninfoTest5" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNextScreeninfoTest5 -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.service.test.NextScreenInfoTest@319267ad]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="afterPowerMockTestClass()[pri:0, instance:com.ring.service.test.NextScreenInfoTest@319267ad]" name="afterPowerMockTestClass" is-config="true" duration-ms="0" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestClass -->
      </class> <!-- com.ring.service.test.NextScreenInfoTest -->
      <class name="com.ring.service.test.LoginServiceImplTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.LoginServiceImplTest@53bd2b00]" name="initMocks" is-config="true" duration-ms="16" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="loadUserByUsernameTest1()[pri:0, instance:com.ring.service.test.LoginServiceImplTest@53bd2b00]" name="loadUserByUsernameTest1" duration-ms="6" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadUserByUsernameTest1 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.LoginServiceImplTest@53bd2b00]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="loadUserByUsernameTest2()[pri:0, instance:com.ring.service.test.LoginServiceImplTest@53bd2b00]" name="loadUserByUsernameTest2" duration-ms="3" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <exception class="org.springframework.security.core.userdetails.UsernameNotFoundException">
            <message>
              <![CDATA[User not found]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.security.core.userdetails.UsernameNotFoundException: User not found
at com.ring.service.LoginServiceImpl.loadUserByUsername(LoginServiceImpl.java:32)
at com.ring.service.test.LoginServiceImplTest.loadUserByUsernameTest2(LoginServiceImplTest.java:49)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.security.core.userdetails.UsernameNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadUserByUsernameTest2 -->
      </class> <!-- com.ring.service.test.LoginServiceImplTest -->
      <class name="com.ring.controller.test.UserControllerTest">
        <test-method status="PASS" signature="beforePowerMockTestClass()[pri:0, instance:com.ring.controller.test.UserControllerTest@7bb5c602]" name="beforePowerMockTestClass" is-config="true" duration-ms="15" started-at="2020-01-31T09:01:56Z" finished-at="2020-01-31T09:01:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestClass -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.controller.test.UserControllerTest@7bb5c602]" name="beforePowerMockTestMethod" is-config="true" duration-ms="281" started-at="2020-01-31T09:01:56Z" finished-at="2020-01-31T09:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.controller.test.UserControllerTest@7bb5c602]" name="initMocks" is-config="true" duration-ms="7" started-at="2020-01-31T09:01:57Z" finished-at="2020-01-31T09:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getUserInfoTest1()[pri:0, instance:com.ring.controller.test.UserControllerTest@7bb5c602]" name="getUserInfoTest1" duration-ms="517" started-at="2020-01-31T09:01:57Z" finished-at="2020-01-31T09:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserInfoTest1 -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.controller.test.UserControllerTest@7bb5c602]" name="afterPowerMockTestMethod" is-config="true" duration-ms="2" started-at="2020-01-31T09:01:57Z" finished-at="2020-01-31T09:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.controller.test.UserControllerTest@7bb5c602]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:57Z" finished-at="2020-01-31T09:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.controller.test.UserControllerTest@7bb5c602]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:57Z" finished-at="2020-01-31T09:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="registerUserTest1()[pri:0, instance:com.ring.controller.test.UserControllerTest@7bb5c602]" name="registerUserTest1" duration-ms="2" started-at="2020-01-31T09:01:57Z" finished-at="2020-01-31T09:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUserTest1 -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.controller.test.UserControllerTest@7bb5c602]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:57Z" finished-at="2020-01-31T09:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ring.controller.test.UserControllerTest@7bb5c602]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:57Z" finished-at="2020-01-31T09:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.controller.test.UserControllerTest@7bb5c602]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:01:57Z" finished-at="2020-01-31T09:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="updateUserInfoTest1()[pri:0, instance:com.ring.controller.test.UserControllerTest@7bb5c602]" name="updateUserInfoTest1" duration-ms="1" started-at="2020-01-31T09:01:57Z" finished-at="2020-01-31T09:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUserInfoTest1 -->
        <test-method status="PASS" signature="afterPowerMockTestClass()[pri:0, instance:com.ring.controller.test.UserControllerTest@7bb5c602]" name="afterPowerMockTestClass" is-config="true" duration-ms="0" started-at="2020-01-31T09:01:57Z" finished-at="2020-01-31T09:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestClass -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ring.controller.test.UserControllerTest@7bb5c602]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-01-31T09:01:57Z" finished-at="2020-01-31T09:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
      </class> <!-- com.ring.controller.test.UserControllerTest -->
      <class name="com.ring.service.test.FacebookServiceProviderTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.FacebookServiceProviderTest@29cd7b9e]" name="initMocks" is-config="true" duration-ms="73" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="validateAccessTokenTest1()[pri:0, instance:com.ring.service.test.FacebookServiceProviderTest@29cd7b9e]" name="validateAccessTokenTest1" duration-ms="2" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAccessTokenTest1 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.FacebookServiceProviderTest@29cd7b9e]" name="initMocks" is-config="true" duration-ms="0" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="validateAccessTokenTest2()[pri:0, instance:com.ring.service.test.FacebookServiceProviderTest@29cd7b9e]" name="validateAccessTokenTest2" duration-ms="2" started-at="2020-01-31T09:02:00Z" finished-at="2020-01-31T09:02:00Z">
          <exception class="com.ring.exceptions.RingException">
            <full-stacktrace>
              <![CDATA[com.ring.exceptions.RingException
at com.ring.service.FacebookServiceProvider.getDebugTokenUrl(FacebookServiceProvider.java:49)
at com.ring.service.FacebookServiceProvider.getAccesstokenInformation(FacebookServiceProvider.java:34)
at com.ring.service.FacebookServiceProvider.validateAccessToken(FacebookServiceProvider.java:25)
at com.ring.service.test.FacebookServiceProviderTest.validateAccessTokenTest2(FacebookServiceProviderTest.java:71)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- com.ring.exceptions.RingException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAccessTokenTest2 -->
      </class> <!-- com.ring.service.test.FacebookServiceProviderTest -->
      <class name="com.ring.service.test.TyrePressureServiceImplTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.TyrePressureServiceImplTest@3b89f41a]" name="initMocks" is-config="true" duration-ms="5" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getLatestPressureDataTest1()[pri:0, instance:com.ring.service.test.TyrePressureServiceImplTest@3b89f41a]" name="getLatestPressureDataTest1" duration-ms="4" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLatestPressureDataTest1 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.TyrePressureServiceImplTest@3b89f41a]" name="initMocks" is-config="true" duration-ms="0" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="getTyrePressureDataTest1()[pri:0, instance:com.ring.service.test.TyrePressureServiceImplTest@3b89f41a]" name="getTyrePressureDataTest1" duration-ms="3" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTyrePressureDataTest1 -->
      </class> <!-- com.ring.service.test.TyrePressureServiceImplTest -->
      <class name="com.ring.service.test.SocialLoginServiceImplementationTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.SocialLoginServiceImplementationTest@1d62a0b]" name="initMocks" is-config="true" duration-ms="34" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="loginUsingFacebookTest1()[pri:0, instance:com.ring.service.test.SocialLoginServiceImplementationTest@1d62a0b]" name="loginUsingFacebookTest1" duration-ms="2" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUsingFacebookTest1 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.ring.service.test.SocialLoginServiceImplementationTest@1d62a0b]" name="initMocks" is-config="true" duration-ms="1" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="loginUsingFacebookTest2()[pri:0, instance:com.ring.service.test.SocialLoginServiceImplementationTest@1d62a0b]" name="loginUsingFacebookTest2" duration-ms="0" started-at="2020-01-31T09:02:01Z" finished-at="2020-01-31T09:02:01Z">
          <exception class="com.ring.exceptions.RingException">
            <full-stacktrace>
              <![CDATA[com.ring.exceptions.RingException
at com.ring.service.SocialLoginServiceImplementation.loginUsingFacebook(SocialLoginServiceImplementation.java:44)
at com.ring.service.test.SocialLoginServiceImplementationTest.loginUsingFacebookTest2(SocialLoginServiceImplementationTest.java:85)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- com.ring.exceptions.RingException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUsingFacebookTest2 -->
      </class> <!-- com.ring.service.test.SocialLoginServiceImplementationTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
